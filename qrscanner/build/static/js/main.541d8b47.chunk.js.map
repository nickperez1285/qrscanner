{"version":3,"sources":["constants/apiConstants.js","components/Header/Header.js","components/LoginForm/LoginForm.js","components/StatusLogger.js","components/Qrscanner.js","components/RegistrationForm/RegistrationForm.js","components/Home/Home.js","utils/PrivateRoute.js","components/AlertComponent/AlertComponent.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","process","REACT_APP_SERVER_URL","ACCESS_TOKEN_NAME","withRouter","props","s","title","location","pathname","substring","length","charAt","toUpperCase","slice","className","onClick","localStorage","removeItem","history","push","renderLogout","useState","email","password","successMessage","state","setState","handleChange","e","target","id","value","prevState","redirectToHome","updateTitle","htmlFor","type","aria-describedby","placeholder","onChange","preventDefault","showError","style","display","role","Component","confirmPassword","orderID","status","ready","setStatus","cam","setCam","toggleCam","console","log","getStatus","undefined","Axios","get","then","res","data","kitchen_status","catch","err","alert","FormControl","component","RadioGroup","flexDirection","name","FormControlLabel","control","Radio","label","delay","onError","error","onScan","width","height","body","JSON","stringify","delivery_id","fetch","method","mode","updateStatus","payload","axios","post","response","setItem","token","sendDetailsToServer","redirectToLogin","useEffect","headers","getItem","PrivateRoute","children","rest","render","to","from","AlertComponent","modalDisplay","toggleDisplay","closeModal","hideError","errorMessage","aria-label","aria-hidden","App","updateErrorMessage","path","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","message"],"mappings":"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","file":"static/js/main.541d8b47.chunk.js","sourcesContent":["export const API_BASE_URL = process.env.REACT_APP_SERVER_URL;\nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { ACCESS_TOKEN_NAME } from \"../../constants/apiConstants\";\nfunction Header(props) {\n\tconst capitalize = (s) => {\n\t\tif (typeof s !== \"string\") return \"\";\n\t\treturn s.charAt(0).toUpperCase() + s.slice(1);\n\t};\n\tlet title = capitalize(props.location.pathname.substring(1, props.location.pathname.length));\n\tif (props.location.pathname === \"/\") {\n\t\ttitle = \"SexyCakes Tracker Panel\";\n\t}\n\tfunction renderLogout() {\n\t\tif (props.location.pathname === \"/home\") {\n\t\t\treturn (\n\t\t\t\t<div className=\"ml-auto\">\n\t\t\t\t\t<button className=\"btn btn-danger\" onClick={() => handleLogout()}>\n\t\t\t\t\t\tLogout\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\tfunction handleLogout() {\n\t\tlocalStorage.removeItem(ACCESS_TOKEN_NAME);\n\t\tprops.history.push(\"/login\");\n\t}\n\treturn (\n\t\t<nav className=\"navbar navbar-dark bg-primary\">\n\t\t\t<div className=\"row col-12 d-flex justify-content-center text-white\">\n\t\t\t\t<span className=\"h3\">{props.title || title}</span>\n\t\t\t\t{renderLogout()}\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\nexport default withRouter(Header);\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./LoginForm.css\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"../../constants/apiConstants\";\nimport { withRouter } from \"react-router-dom\";\n\n\n\tvar user=  \"alex\"\n\tvar\tpassword= \"pass2021\"\nfunction LoginForm(props) {\n\tconst [state, setState] = useState({\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\tsuccessMessage: null,\n\t});\n\tconst handleChange = (e) => {\n\t\tconst { id, value } = e.target;\n\t\tsetState((prevState) => ({\n\t\t\t...prevState,\n\t\t\t[id]: value,\n\t\t}));\n\t};\n\n\tconst handleSubmitClick = (e) => {\n\t\te.preventDefault();\n\t\tconst payload = {\n\t\t\tuser: \"\",\n\t\t\tpassword: \"\",\n\t\t};\n\t\t// axios.post(API_BASE_URL+'/user/login', payload)\n\t\t//     .then(function (response) {\n\t\t// if(response.status === 200){\n\t\t//     setState(prevState => ({\n\t\t//         ...prevState,\n\t\t//         'successMessage' : 'Login successful. Redirecting to home page..'\n\t\t//     }))\n\t\t//             localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\n\n\t\tif (payload.password == \"pass2021\" && payload.user == \"alex\") {\n\t\t\tredirectToHome();\n\n\t\t\tprops.showError(null);\n\t\t}\n\t\t//     else if(response.code === 204){\n\t\t//         props.showError(\"Username and password do not match\");\n\t\t//     }\n\t\t//     else{\n\t\t//         props.showError(\"Username does not exists\");\n\t\t//     }\n\t\t// })\n\t\t// .catch(function (error) {\n\t\t//     console.log(error);\n\t\t// });\n\t};\n\tconst redirectToHome = () => {\n\t\tprops.updateTitle(\"Home\");\n\t\tprops.history.push(\"/order-status\");\n\t};\n\tconst redirectToRegister = () => {\n\t\tprops.history.push(\"/register\");\n\t\tprops.updateTitle(\"Register\");\n\t};\n\treturn (\n\t\t<div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n\t\t\t<form>\n\t\t\t\t<div className=\"form-group text-left\">\n\t\t\t\t\t<label htmlFor=\"exampleInputEmail1\">User</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\taria-describedby=\"emailHelp\"\n\t\t\t\t\t\tplaceholder=\"Enter Username\"\n\t\t\t\t\t\tvalue={state.email}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <small id=\"emailHelp\" className=\"form-text text-muted\">\n\t\t\t\t\t\tWe'll never share your email with anyone else.\n\t\t\t\t\t</small> */}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group text-left\">\n\t\t\t\t\t<label htmlFor=\"exampleInputPassword1\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tvalue={state.password}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-check\"></div>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmitClick}>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<div\n\t\t\t\tclassName=\"alert alert-success mt-2\"\n\t\t\t\tstyle={{ display: state.successMessage ? \"block\" : \"none\" }}\n\t\t\t\trole=\"alert\">\n\t\t\t\t{state.successMessage}\n\t\t\t</div>\n\t\t\t<div className=\"registerMessage\">\n\t\t\t\t<span>Dont have an account? </span>\n\t\t\t\t<span className=\"loginText\" onClick={() => redirectToRegister()}>\n\t\t\t\t\tRegister\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(LoginForm);\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { RadioGroup, FormLabel, FormControl, FormControlLabel, Radio } from \"@material-ui/core\";\nimport QrReader from \"react-qr-reader\";\nimport Axios from \"axios\";\nimport Qrscanner from \"./Qrscanner\";\n\nconst StatusLogger = () => {\n\tconst [state, setState] = useState({\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\tconfirmPassword: \"\",\n\t\tsuccessMessage: null,\n\t\torderID: \"\",\n\t\tstatus: \"\",\n\t\tready: false,\n\t});\n\n\tconst [status, setStatus] = useState(\"\");\n\tconst [cam, setCam] = useState(false);\n\n\tvar handleScan = (data) => {\n\t\tif (data && cam) {\n\t\t\tsetState({ ...state, orderID: data });\n\t\t\tgetStatus(data);\n\t\t}\n\t};\n\n\tconst handleError = (err) => {\n\t\tconsole.error(err);\n\t};\n\tconst toggleCam = () => {\n\t\tsetCam(!cam);\n\t\tconsole.log(cam);\n\t};\n\tconst handleChange = (e) => {\n\t\tconst { id, value } = e.target;\n\t\tsetStatus(value);\n\t\tconsole.log(status);\n\t};\n\n\tvar getStatus = (id) => {\n\t\t// preventDefault();\n\t\tlet stat = \"\";\n\t\tif (id) {\n\t\t\tif (typeof id !== undefined) {\n\t\t\t\tAxios.get(`https://us-central1-saymile-a29fa.cloudfunctions.net/api/getKitchenStatus/${id}`)\n\t\t\t\t\t.then((res) => setStatus(res.data.kitchen_status))\n\t\t\t\t\t.catch((err) => alert(err));\n\t\t\t\tconsole.log(status);\n\t\t\t}\n\t\t}\n\t\ttoggleCam();\n\t\treturn status;\n\t};\n\n\tconst updateStatus = (id) => {\n\t\tif (state.orderID !== undefined) {\n\t\t\tlet body = JSON.stringify({ delivery_id: state.orderID, kitchen_status: status });\n\t\t\tconsole.log(body);\n\t\t\tfetch(\"https://us-central1-saymile-a29fa.cloudfunctions.net/api/updateKitchenStatus\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tmode: \"cors\",\n\t\t\t\tbody: body,\n\t\t\t})\n\t\t\t\t.then((res) => (res.status == 200 ? alert(\"Updated Successfully\") : alert(\"failed to update\")))\n\t\t\t\t.catch((err) => alert(err));\n\t\t}\n\t};\n\t// useEffect(() => {\n\t// \tif (state.orderID !== undefined && state.ready) {\n\t// \t\tgetStatus(state.orderID);\n\t// \t}\n\t// }, [state.orderID]);\n\t// const sendDetailsToServer = () => {\n\t// \tif (state.email.length && state.password.length) {\n\t// \t\tprops.showError(null);\n\t// \t\tconst payload = {\n\t// \t\t\temail: state.email,\n\t// \t\t\tpassword: state.password,\n\t// \t\t};\n\t// \t\taxios\n\t// \t\t\t.post(API_BASE_URL + \"/user/register\", payload)\n\t// \t\t\t.then(function (response) {\n\t// \t\t\t\tif (response.status === 200) {\n\t// \t\t\t\t\tsetState((prevState) => ({\n\t// \t\t\t\t\t\t...prevState,\n\t// \t\t\t\t\t\tsuccessMessage: \"Registration successful. Redirecting to home page..\",\n\t// \t\t\t\t\t}));\n\t// \t\t\t\t\tlocalStorage.setItem(ACCESS_TOKEN_NAME, response.data.token);\n\t// \t\t\t\t\tredirectToHome();\n\t// \t\t\t\t\tprops.showError(null);\n\t// \t\t\t\t} else {\n\t// \t\t\t\t\tprops.showError(\"Some error ocurred\");\n\t// \t\t\t\t}\n\t// \t\t\t})\n\t// \t\t\t.catch(function (error) {\n\t// \t\t\t\tconsole.log(error);\n\t// \t\t\t});\n\t// \t} else {\n\t// \t\tprops.showError(\"Please enter valid username and password\");\n\t// \t}\n\t// };\n\t// const redirectToHome = () => {\n\t// \tprops.updateTitle(\"Home\");\n\t// \tprops.history.push(\"/home\");\n\t// };\n\t// const redirectToLogin = () => {\n\t// \tprops.updateTitle(\"Login\");\n\t// \tprops.history.push(\"/login\");\n\t// };\n\t// const handleSubmitClick = (e) => {\n\t// \te.preventDefault();\n\t// \tif (state.password === state.confirmPassword) {\n\t// \t\tsendDetailsToServer();\n\t// \t} else {\n\t// \t\tprops.showError(\"Passwords do not match\");\n\t// \t}\n\t// };\n\n\treturn (\n\t\t<div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n\t\t\t<form>\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Order:{state.orderID}</h2>\n\t\t\t\t</div>\n\t\t\t\t<h3>Current Status:{status}</h3>\n\n\t\t\t\t<div className=\"form-group text-left\">\n\t\t\t\t\t{/* <label htmlFor=\"exampleInputEmail1\">Order Code</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\taria-describedby=\"emailHelp\"\n\t\t\t\t\t\tplaceholder=\"Enter code\"\n\t\t\t\t\t\tvalue={state.email}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/> */}\n\t\t\t\t\t{/* <small id=\"emailHelp\" className=\"form-text text-muted\">\n\t\t\t\t\t\tWe'll never share your email with anyone else.\n\t\t\t\t\t</small> */}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<div\n\t\t\t\tclassName=\"alert alert-success mt-2\"\n\t\t\t\tstyle={{ display: state.successMessage ? \"block\" : \"none\" }}\n\t\t\t\trole=\"alert\">\n\t\t\t\t{state.successMessage}\n\t\t\t</div>\n\t\t\t<button type=\"submit\" className=\"btn btn-primary\" onClick={() => toggleCam()}>\n\t\t\t\tScan\n\t\t\t</button>\n\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t<RadioGroup style={{ display: \"flex\", flexDirection: \"row\" }} name=\"Status\" onChange={handleChange}>\n\t\t\t\t\t<FormControlLabel value=\"order received, \" control={<Radio />} label=\"Order Received,\" />\n\t\t\t\t\t<FormControlLabel value=\"cooking\" control={<Radio />} label=\"Cooking\" />\n\t\t\t\t\t<FormControlLabel value=\"left kitchen, \" control={<Radio />} label=\"Left Kitchen\" />\n\t\t\t\t\t<FormControlLabel value=\"on campus\" control={<Radio />} label=\"On Campus\" />\n\t\t\t\t\t<FormControlLabel value=\"delivered\" control={<Radio />} label=\"Delivered\" />\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\n\t\t\t{cam && (\n\t\t\t\t<div>\n\t\t\t\t\t<QrReader delay={300} onError={handleError} onScan={handleScan} style={{ width: 200, height: 100 }} />\n\t\t\t\t\t{/* <Qrscanner /> */}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<br></br>\n\t\t\t<button type=\"submit\" className=\"btn btn-primary\" onClick={() => updateStatus()}>\n\t\t\t\tUpdate\n\t\t\t</button>\n\n\t\t\t{/* <div className=\"mt-2\">\n\t\t\t\t<span>Already have an account? </span>\n\t\t\t\t<span className=\"loginText\" onClick={() => console.log(\"inoput\")}>\n\t\t\t\t\tLogin here\n\t\t\t\t</span>\n\t\t\t</div> */}\n\t\t</div>\n\t);\n};\n\nexport default withRouter(StatusLogger);\n","import React, { Component } from \"react\";\nimport QrReader from \"react-qr-reader\";\n\nexport class Qrscanner extends Component {\n\tstate = {\n\t\tresult: \"No result\",\n\t};\n\n\thandleScan = (data) => {\n\t\tif (data) {\n\t\t\tthis.setState({\n\t\t\t\tresult: data,\n\t\t\t});\n\t\t}\n\t};\n\thandleError = (err) => {\n\t\tconsole.error(err);\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<QrReader delay={300} onError={this.handleError} onScan={this.handleScan} style={{ width: \"100%\" }} />\n\t\t\t\t<p>{this.state.result}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Qrscanner;\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './RegistrationForm.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n\nfunction RegistrationForm(props) {\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        confirmPassword: \"\",\n        successMessage: null\n    })\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n    const sendDetailsToServer = () => {\n        if(state.email.length && state.password.length) {\n            props.showError(null);\n            const payload={\n                \"email\":state.email,\n                \"password\":state.password,\n            }\n            axios.post(API_BASE_URL+'/user/register', payload)\n                .then(function (response) {\n                    if(response.status === 200){\n                        setState(prevState => ({\n                            ...prevState,\n                            'successMessage' : 'Registration successful. Redirecting to home page..'\n                        }))\n                        localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\n                        redirectToHome();\n                        props.showError(null)\n                    } else{\n                        props.showError(\"Some error ocurred\");\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });    \n        } else {\n            props.showError('Please enter valid username and password')    \n        }\n        \n    }\n    const redirectToHome = () => {\n        props.updateTitle('Home')\n        props.history.push('/home');\n    }\n    const redirectToLogin = () => {\n        props.updateTitle('Login')\n        props.history.push('/login'); \n    }\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if(state.password === state.confirmPassword) {\n            sendDetailsToServer()    \n        } else {\n            props.showError('Passwords do not match');\n        }\n    }\n    return(\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n            <form>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" \n                       className=\"form-control\" \n                       id=\"email\" \n                       aria-describedby=\"emailHelp\" \n                       placeholder=\"Enter email\" \n                       value={state.email}\n                       onChange={handleChange}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\" \n                        className=\"form-control\" \n                        id=\"password\" \n                        placeholder=\"Password\"\n                        value={state.password}\n                        onChange={handleChange} \n                    />\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                    <input type=\"password\" \n                        className=\"form-control\" \n                        id=\"confirmPassword\" \n                        placeholder=\"Confirm Password\"\n                        value={state.confirmPassword}\n                        onChange={handleChange} \n                    />\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >\n                    Register\n                </button>\n            </form>\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\n                {state.successMessage}\n            </div>\n            <div className=\"mt-2\">\n                <span>Already have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToLogin()}>Login here</span> \n            </div>\n            \n        </div>\n    )\n}\n\nexport default withRouter(RegistrationForm);","import React,{ useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiConstants';\nimport axios from 'axios'\nfunction Home(props) {\n    useEffect(() => {\n        axios.get(API_BASE_URL+'/user/me', { headers: { 'token': localStorage.getItem(ACCESS_TOKEN_NAME) }})\n        .then(function (response) {\n            if(response.status !== 200){\n              redirectToLogin()\n            }\n        })\n        .catch(function (error) {\n          redirectToLogin()\n        });\n      })\n    function redirectToLogin() {\n    props.history.push('/login');\n    }\n    return(\n        <div className=\"mt-2\">\n            Home page content\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\nimport { ACCESS_TOKEN_NAME } from '../constants/apiConstants';\nfunction PrivateRoute({ children, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          localStorage.getItem(ACCESS_TOKEN_NAME) ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\nimport './AlertComponent.css';\nfunction AlertComponent(props) {\n    const [modalDisplay, toggleDisplay] = useState('none');\n    const openModal = () => {\n        toggleDisplay('block');     \n    }\n    const closeModal = () => {\n        toggleDisplay('none'); \n        props.hideError(null);\n    }\n    useEffect(() => {\n        if(props.errorMessage !== null) {\n            openModal()\n        } else {\n            closeModal()\n        }\n    });\n    \n    return(\n        <div \n            className={\"alert alert-danger alert-dismissable mt-4\"} \n            role=\"alert\" \n            id=\"alertPopUp\"\n            style={{ display: modalDisplay }}\n        >\n            <div className=\"d-flex alertMessage\">\n                <span>{props.errorMessage}</span>\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            \n        </div>\n    )\n} \n\nexport default AlertComponent","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport LoginForm from \"./components/LoginForm/LoginForm\";\nimport StatusLogger from \"./components/StatusLogger\";\nimport RegistrationForm from \"./components/RegistrationForm/RegistrationForm\";\nimport Home from \"./components/Home/Home\";\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AlertComponent from \"./components/AlertComponent/AlertComponent\";\nfunction App() {\n\tconst [title, updateTitle] = useState(null);\n\tconst [errorMessage, updateErrorMessage] = useState(null);\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header title={title} />\n\t\t\t\t<div className=\"container d-flex align-items-center flex-column\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact={true}>\n\t\t\t\t\t\t\t<StatusLogger orderID={1} showError={updateErrorMessage} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/order-status\">\n\t\t\t\t\t\t\t<StatusLogger orderID={1} showError={updateErrorMessage} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t\t\t<RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t\t<LoginForm showError={updateErrorMessage} updateTitle={updateTitle} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<PrivateRoute path=\"/home\">\n\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t</Switch>\n\t\t\t\t\t<AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\"No internet connection found. App is running in offline mode.\");\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}